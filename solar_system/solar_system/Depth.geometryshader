#version 330 core

layout (triangles) in;
layout (triangle_strip, max_vertices=18) out;

uniform mat4 lightVP1;
uniform mat4 lightVP2;
uniform mat4 lightVP3;
uniform mat4 lightVP4;
uniform mat4 lightVP5;
uniform mat4 lightVP6;

mat4 light_VP[6];
out vec4 FragPos; // FragPos from GS (output per emitvertex)

void main()
{
    light_VP[0] = lightVP1;
    light_VP[1] = lightVP2;
    light_VP[2] = lightVP3;
    light_VP[3] = lightVP4;
    light_VP[4] = lightVP5;
    light_VP[5] = lightVP6;
    for(int face = 0; face < 6; ++face)
    {
        gl_Layer = face; // built-in variable that specifies to which face we render.
        for(int i = 0; i < 3; ++i) // for each triangle vertex
        {
            FragPos = gl_in[i].gl_Position;
            gl_Position = light_VP[face] * FragPos;
            EmitVertex();
        }    
        EndPrimitive();
    }
} 